{"version":3,"sources":["routes/JHSchool/JHSchool.tsx"],"names":["JuniorHighSchool","sendEmail","useEmail","useForm","register","errors","watch","setValue","handleSubmit","useState","showSuccessModal","setShowSuccessModal","showLoadingModal","setShowLoading","disabled","setDisabled","onFormSubmit","data","a","console","log","birthDate","transformDate","newData","setTimeout","error","isForeignerStudent","toLocaleLowerCase","isMoneyTransfer","isBankTransaction","useEffect","type","visible","title","heading","subHeading","onClose","onSubmit","id","typeOfStudent","label","name","value","ref","required","columns","placeholder","schoolYear","from","to","lastSyFromYear","lastSyToYear","educationLevel","readOnly","gradeLevel","firstName","lastName","middleName","gender","birthPlace","age","nationality","dialect","ethnicAffiliation","religion","contactNumber","pattern","message","emailAddress","facebookAccount","homeAddress","homeCountryAddress","parentsAnnualIncome","annualIncome","parentsInfo","fathersName","fathersOccupation","mothersName","mothersOccupation","elementarySchoolName","elementaryYearGraduated","authorizedPerson1Name","authorizedPerson1Relationship","authorizedPerson2Name","authorizedPerson2Relationship","paymentMethod","Fragment","paymentService","paymentBank","certifyTrue","containerId"],"mappings":"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","file":"static/js/5.04090797.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n  StyledTheology,\n  StyledFormHeader,\n  StyledTheologyContainer,\n  StyledBasicEdPersonalFieldWrapper,\n  StyledBasicEdFieldWrapper,\n  StyledBasicEdEducationalFieldWrapper,\n  StyledTheologyCheckboxWrapper,\n  StyledTheologyCheckboxError,\n  StyledPaymentMoneyTransfer,\n} from \"styles\";\nimport {\n  Navigation,\n  InputWrapper,\n  Input,\n  RadioWrapper,\n  Radio,\n  Form,\n  Checkbox,\n  Modal,\n} from \"components\";\n\nimport {\n  EnrolleeStatusProps,\n  PersonalProps,\n  EducationalProps,\n  TestimonyProps,\n  SectionContainer,\n  PaymentProps,\n  PaymentInfo,\n} from \"routes\";\nimport { useEmail } from \"hooks\";\nimport { transformDate } from \"utils\";\n\ntype Props = {} & RouteComponentProps;\n\ntype BasicEdTypes = EnrolleeStatusProps &\n  PersonalProps &\n  EducationalProps &\n  TestimonyProps &\n  PaymentProps;\n\nconst JuniorHighSchool: React.FC<Props> = () => {\n  const sendEmail = useEmail<BasicEdTypes>(\"spbts_basic_ed_admission_template\");\n\n  const { register, errors, watch, setValue, handleSubmit } = useForm<\n    BasicEdTypes\n  >();\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n\n  const [showLoadingModal, setShowLoading] = useState(false);\n\n  const [disabled, setDisabled] = useState(false);\n\n  const onFormSubmit = async (data: BasicEdTypes) => {\n    setDisabled(true);\n    setShowLoading(true);\n\n    console.log(data);\n\n    const birthDate = transformDate(data.birthDate);\n\n    const newData = {\n      ...data,\n      birthDate,\n    };\n\n    try {\n      const response = await sendEmail(newData);\n\n      if (response) {\n        setTimeout(() => {\n          setShowLoading(false);\n          setShowSuccessModal(true);\n          setDisabled(false);\n        }, 3000);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const isForeignerStudent =\n    watch(\"typeOfStudent\")?.toLocaleLowerCase() === \"foreigner\";\n\n  const isMoneyTransfer =\n    watch(\"paymentMethod\")?.toLocaleLowerCase() === \"money transfer\";\n\n  const isBankTransaction =\n    watch(\"paymentMethod\")?.toLocaleLowerCase() === \"bank transaction\";\n\n  useEffect(() => {\n    setValue(\"educationLevel\", \"Junior High\");\n\n    if (isMoneyTransfer) {\n      setValue(\"paymentBank\", \"\");\n    } else {\n      setValue(\"paymentService\", \"\");\n    }\n  }, [isMoneyTransfer, setValue]);\n\n  return (\n    <StyledTheology>\n      <Navigation />\n\n      <Modal\n        type=\"success\"\n        visible={showSuccessModal}\n        title=\"success\"\n        heading=\"Submitted Successfully\"\n        subHeading=\"Your form has been successfully submitted.\"\n        onClose={() => setShowSuccessModal(false)}\n      />\n\n      <Modal\n        type=\"info\"\n        visible={showLoadingModal}\n        title=\"information\"\n        heading=\"Processing\"\n        subHeading=\"Please wait. Your information is being process.\"\n        onClose={() => setShowLoading(false)}\n      />\n\n      <StyledTheologyContainer>\n        <Form onSubmit={handleSubmit(onFormSubmit)} disabled={disabled}>\n          <StyledFormHeader>\n            <h1>Admission Form</h1>\n            <p>Please fill all necessary information with all honesty.</p>\n            <p>Please note, an asterisk(*) denotes a required field.</p>\n          </StyledFormHeader>\n\n          <SectionContainer heading=\"Enrollee Status\">\n            <StyledBasicEdFieldWrapper>\n              <RadioWrapper\n                id=\"type-of-student\"\n                heading=\"What student type are you?\"\n                error={errors.typeOfStudent && \"Student Types is Required!\"}\n              >\n                <Radio\n                  label=\"New Student\"\n                  name=\"typeOfStudent\"\n                  value=\"New Student\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Current Student\"\n                  name=\"typeOfStudent\"\n                  value=\"Current Student\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Transferee\"\n                  name=\"typeOfStudent\"\n                  value=\"Transferee\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Returning Student\"\n                  name=\"typeOfStudent\"\n                  value=\"Returning Student\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Foreigner\"\n                  name=\"typeOfStudent\"\n                  value=\"Foreigner\"\n                  ref={register({ required: true })}\n                />\n              </RadioWrapper>\n\n              <InputWrapper\n                heading=\"School Year\"\n                id=\"school-year\"\n                columns=\"repeat(2, 1fr)\"\n              >\n                <Input\n                  type=\"number\"\n                  label=\"From\"\n                  placeholder=\"year\"\n                  id=\"from-year\"\n                  name=\"schoolYear.from\"\n                  ref={register({ required: true })}\n                  error={errors.schoolYear?.from && \"from year is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"To\"\n                  placeholder=\"year\"\n                  id=\"to-year\"\n                  name=\"schoolYear.to\"\n                  ref={register({ required: true })}\n                  error={errors.schoolYear?.to && \"to year is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Last School Year Attended\"\n                id=\"last-school-year\"\n                columns=\"repeat(2, 1fr)\"\n              >\n                <Input\n                  type=\"number\"\n                  label=\"From\"\n                  placeholder=\"year\"\n                  id=\"last-from-year\"\n                  name=\"lastSyFromYear\"\n                  ref={register({ required: true })}\n                  error={errors.lastSyFromYear && \"This field is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"To\"\n                  placeholder=\"year\"\n                  id=\"last-to-year\"\n                  name=\"lastSyToYear\"\n                  ref={register({ required: true })}\n                  error={errors.lastSyToYear && \"This field is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Current Education\"\n                id=\"desired-course\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"Education Level\"\n                  id=\"course-name\"\n                  name=\"educationLevel\"\n                  ref={register({ required: true })}\n                  error={errors.educationLevel && \"education level is required\"}\n                  readOnly\n                />\n                <Input\n                  type=\"number\"\n                  id=\"grade-level\"\n                  label=\"grade level\"\n                  name=\"gradeLevel\"\n                  ref={register({ required: true })}\n                  error={errors.gradeLevel && \"grade level is required\"}\n                />\n              </InputWrapper>\n            </StyledBasicEdFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Personal Information\">\n            <StyledBasicEdPersonalFieldWrapper>\n              <InputWrapper\n                heading=\"Full Name\"\n                id=\"full-name\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"First Name\"\n                  id=\"first-name\"\n                  name=\"firstName\"\n                  ref={register({ required: true })}\n                  error={errors.firstName && \"first name is required\"}\n                />\n                <Input\n                  label=\"Last Name\"\n                  id=\"last-name\"\n                  name=\"lastName\"\n                  ref={register({ required: true })}\n                  error={errors.lastName && \"last name is required\"}\n                />\n                <Input\n                  label=\"Middle Name\"\n                  id=\"middle-name\"\n                  name=\"middleName\"\n                  ref={register({ required: true })}\n                  error={errors.middleName && \"middle name is required\"}\n                />\n                <Input\n                  label=\"Suffix\"\n                  placeholder=\"Ex. Jr / Sr\"\n                  id=\"suffix\"\n                  required={false}\n                  name=\"suffix\"\n                  ref={register}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Gender\"\n                id=\"gender-status\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"gender\"\n                  placeholder=\"Male / Female\"\n                  name=\"gender\"\n                  ref={register({ required: true })}\n                  error={errors.gender && \"gender is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Birth Information\"\n                id=\"birth-info\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"birth place\"\n                  id=\"birth-place\"\n                  name=\"birthPlace\"\n                  ref={register({ required: true })}\n                  error={errors.birthPlace && \"birth place is required\"}\n                />\n                <Input\n                  type=\"date\"\n                  label=\"birth date\"\n                  id=\"birth-date\"\n                  name=\"birthDate\"\n                  ref={register({ required: true })}\n                  error={errors.birthDate && \"birth date is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"age\"\n                  id=\"age\"\n                  name=\"age\"\n                  ref={register({ required: true })}\n                  error={errors.age && \"age is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Nationality\"\n                id=\"nationalism\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"nationality\"\n                  id=\"nationality\"\n                  name=\"nationality\"\n                  ref={register({ required: true })}\n                  error={errors.nationality && \"nationality is required\"}\n                />\n                <Input\n                  label=\"dialect\"\n                  id=\"dialect\"\n                  name=\"dialect\"\n                  ref={register({ required: true })}\n                  error={errors.dialect && \"dialect is required\"}\n                />\n                <Input\n                  label=\"ethnic affiliation\"\n                  placeholder=\"Ex. Cebuano / etc.\"\n                  id=\"ethnic\"\n                  name=\"ethnicAffiliation\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.ethnicAffiliation && \"ethnicAffiliation is required\"\n                  }\n                />\n                <Input\n                  label=\"religion\"\n                  placeholder=\"religion\"\n                  id=\"religion\"\n                  name=\"religion\"\n                  ref={register({ required: true })}\n                  error={errors.religion && \"religion is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Contact Information\"\n                id=\"contact-information\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  type=\"number\"\n                  label=\"contact number\"\n                  id=\"contact-number\"\n                  name=\"contactNumber\"\n                  ref={register({ required: true })}\n                  error={errors.contactNumber && \"contactNumber is required\"}\n                />\n                <Input\n                  type=\"email\"\n                  label=\"email address\"\n                  id=\"email\"\n                  name=\"emailAddress\"\n                  ref={register({\n                    required: true,\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                      message: \"invalid email address\",\n                    },\n                  })}\n                  error={errors.emailAddress && \"email address is required\"}\n                />\n                <Input\n                  label=\"facebook account\"\n                  id=\"facebook-account\"\n                  name=\"facebookAccount\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.facebookAccount && \"facebook account is required\"\n                  }\n                />\n                <Input\n                  label={\n                    isForeignerStudent ? \"philippine address\" : \"home address\"\n                  }\n                  id=\"home-address\"\n                  name=\"homeAddress\"\n                  ref={register({ required: true })}\n                  error={\n                    (errors.homeAddress &&\n                      isForeignerStudent &&\n                      \"philippine Address is required\") ||\n                    (errors.homeAddress &&\n                      !isForeignerStudent &&\n                      \"home Address is required\") ||\n                    \"\"\n                  }\n                />\n\n                {isForeignerStudent && (\n                  <Input\n                    label=\"home country address\"\n                    id=\"home-country-address\"\n                    name=\"homeCountryAddress\"\n                    ref={register({ required: true })}\n                    error={\n                      errors.homeCountryAddress &&\n                      \"home Country Address is required\"\n                    }\n                  />\n                )}\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Parent's / Family Annual Income\"\n                id=\"parents-income\"\n                columns=\"repeat(2, 1fr)\"\n              >\n                <Input\n                  label=\"Annual Income\"\n                  id=\"parents-annual-income\"\n                  name=\"parentsAnnualIncome.annualIncome\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsAnnualIncome?.annualIncome &&\n                    \"annual income is required\"\n                  }\n                />\n                <Input\n                  label=\"Other Income\"\n                  placeholder=\"please specify\"\n                  id=\"parents-other-income\"\n                  name=\"parentsAnnualIncome.otherIncome\"\n                  ref={register}\n                  required={false}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Parent's Information\"\n                id=\"parent-information\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"father's name\"\n                  placeholder=\"father's complete name\"\n                  id=\"fathers-name\"\n                  name=\"parentsInfo.fathersName\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.fathersName &&\n                    \"father's name is required\"\n                  }\n                />\n                <Input\n                  label=\"occupation\"\n                  placeholder=\"occupation\"\n                  id=\"fathers-occupation\"\n                  name=\"parentsInfo.fathersOccupation\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.fathersOccupation &&\n                    \"occupation is required\"\n                  }\n                />\n                <Input\n                  label=\"mother's name\"\n                  placeholder=\"mother's complete name\"\n                  id=\"mothers-name\"\n                  name=\"parentsInfo.mothersName\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.mothersName &&\n                    \"mother's name is required\"\n                  }\n                />\n                <Input\n                  label=\"occupation\"\n                  placeholder=\"occupation\"\n                  id=\"mothers-occupation\"\n                  name=\"parentsInfo.mothersOccupation\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.mothersOccupation &&\n                    \"occupation is required\"\n                  }\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Scholarship Information\"\n                id=\"scholarship-info\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"scholarship\"\n                  id=\"scholarship\"\n                  name=\"scholarship\"\n                  ref={register}\n                  required={false}\n                />\n                <Input\n                  label=\"amount\"\n                  id=\"amount\"\n                  name=\"scholarshipAmmount\"\n                  ref={register}\n                  required={false}\n                />\n              </InputWrapper>\n            </StyledBasicEdPersonalFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Educational Background\">\n            <StyledBasicEdEducationalFieldWrapper>\n              <InputWrapper\n                heading=\"elementary\"\n                id=\"elementary\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"school name\"\n                  id=\"elementary-school-name\"\n                  name=\"elementarySchoolName\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.elementarySchoolName && \"school name is required\"\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  label=\"year graduated\"\n                  id=\"elementary-year-graduated\"\n                  name=\"elementaryYearGraduated\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.elementaryYearGraduated &&\n                    \"year graduated is required\"\n                  }\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Authorized person/s to have an access on your school records\"\n                id=\"authorized-persons\"\n                columns=\"repeat(6, 1fr)\"\n              >\n                <Input\n                  label=\"complete name\"\n                  id=\"authorized-person-name-1\"\n                  name=\"authorizedPerson1Name\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.authorizedPerson1Name && \"this field is required\"\n                  }\n                />\n                <Input\n                  label=\"relationship\"\n                  id=\"authorized-person-relationship-1\"\n                  name=\"authorizedPerson1Relationship\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.authorizedPerson1Relationship &&\n                    \"this field is required\"\n                  }\n                />\n                <Input\n                  label=\"complete name\"\n                  id=\"authorized-person-name-2\"\n                  name=\"authorizedPerson2Name\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.authorizedPerson2Name && \"this field is required\"\n                  }\n                />\n                <Input\n                  label=\"relationship\"\n                  id=\"authorized-person-relationship-2\"\n                  name=\"authorizedPerson2Relationship\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.authorizedPerson2Relationship &&\n                    \"this field is required\"\n                  }\n                />\n              </InputWrapper>\n            </StyledBasicEdEducationalFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Payment Information\">\n            <PaymentInfo />\n\n            <RadioWrapper\n              heading=\"select payment method\"\n              id=\"payment-method\"\n              error={\n                errors.paymentMethod &&\n                \"payment method is required! you need to select one.\"\n              }\n            >\n              <Radio\n                label=\"Money transfer\"\n                value=\"Money Transfer\"\n                name=\"paymentMethod\"\n                ref={register({ required: true })}\n              />\n              <Radio\n                label=\"Bank Transaction\"\n                value=\"Bank Transaction\"\n                name=\"paymentMethod\"\n                ref={register({ required: true })}\n              />\n            </RadioWrapper>\n\n            {isMoneyTransfer && (\n              <React.Fragment>\n                <StyledPaymentMoneyTransfer>\n                  <p>\n                    Send your payment to the SPBTS Finance Officer:\n                    <span>MARIA CIENA B. TENECIO</span>\n                    <span>09190083163</span>\n                    <span>Davao City</span>\n                  </p>\n                </StyledPaymentMoneyTransfer>\n\n                <RadioWrapper\n                  heading=\"select service\"\n                  error={\n                    errors.paymentService && \"payment service is required!\"\n                  }\n                >\n                  <Radio\n                    label=\"Palawan Pawnshop\"\n                    name=\"paymentService\"\n                    value=\"Palawan Pawnshop\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"RD Pawnshop\"\n                    name=\"paymentService\"\n                    value=\"RD Pawnshop\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"M Lhuillier\"\n                    name=\"paymentService\"\n                    value=\"M Lhuillier\"\n                    ref={register({ required: true })}\n                  />\n                </RadioWrapper>\n              </React.Fragment>\n            )}\n\n            {isBankTransaction && (\n              <React.Fragment>\n                <StyledPaymentMoneyTransfer>\n                  <p>\n                    You may send your payment to any of the following SPBTS Bank\n                    Accounts:\n                    <span>SPBTS</span>\n                    <span>BPI</span>\n                    <span>9431 0059 61</span>\n                  </p>\n\n                  <p>\n                    <br />\n                    <span>SPBTS</span>\n                    <span>LAND BANK OF THE PHILIPPINES</span>\n                    <span>2981 0856 23</span>\n                  </p>\n\n                  <p>\n                    <br />\n                    <span>SPBTS</span>\n                    <span>METROBANK</span>\n                    <span>547 3 547053606</span>\n                  </p>\n                </StyledPaymentMoneyTransfer>\n\n                <RadioWrapper\n                  heading=\"select bank\"\n                  error={errors.paymentBank && \"payment bank is required!\"}\n                >\n                  <Radio\n                    label=\"BPI\"\n                    name=\"paymentBank\"\n                    value=\"BPI\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"LAND BANK OF THE PHILIPPINES\"\n                    name=\"paymentBank\"\n                    value=\"LAND BANK OF THE PHILIPPINES\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"METROBANK\"\n                    name=\"paymentBank\"\n                    value=\"METROBANK\"\n                    ref={register({ required: true })}\n                  />\n                </RadioWrapper>\n              </React.Fragment>\n            )}\n\n            <StyledPaymentMoneyTransfer>\n              <p>\n                As proof of payment, please send a photo of the receipt to our\n                Finance Officer to any of the following:\n                <span>FB Messenger: Ciena Tenecio</span>\n                <span>E-mail: ciena_tenecio@yahoo.com</span>\n              </p>\n            </StyledPaymentMoneyTransfer>\n          </SectionContainer>\n\n          <StyledTheologyCheckboxWrapper\n            error={errors.certifyTrue ? true : false}\n          >\n            <Checkbox\n              label=\"I certify that all information stated and written above are true and correct. With my consent, I agree that the information and data provided will be used only for whatever legal purposes, do hereby promulgated. [ Section 16 R.A. 10173, known as Data Privacy Act of 2012 ].\"\n              id=\"certify\"\n              containerId=\"certify-checkbox\"\n              name=\"certifyTrue\"\n              ref={register({ required: true })}\n            />\n            {errors.certifyTrue && (\n              <StyledTheologyCheckboxError>\n                This field is required!\n              </StyledTheologyCheckboxError>\n            )}\n          </StyledTheologyCheckboxWrapper>\n        </Form>\n      </StyledTheologyContainer>\n    </StyledTheology>\n  );\n};\n\nexport default JuniorHighSchool;\n"],"sourceRoot":""}