{"version":3,"sources":["routes/ChistianEd/ChristianEd.tsx"],"names":["College","sendEmail","useEmail","useForm","register","errors","watch","setValue","handleSubmit","useState","showSuccessModal","setShowSuccessModal","showLoadingModal","setShowLoading","disabled","setDisabled","onFormSubmit","data","a","console","log","birthDate","transformDate","dateBaptized","newData","setTimeout","error","isNewStudent","toLocaleLowerCase","isCurrentStudent","isForeignerStudent","isMarried","isMoneyTransfer","isBankTransaction","useEffect","type","visible","title","heading","subHeading","onClose","onSubmit","id","typeOfStudent","label","name","value","ref","required","semester","columns","placeholder","schoolYear","from","to","readOnly","yearLevel","firstName","lastName","middleName","gender","civilStatus","spouseName","birthPlace","age","nationality","dialect","ethnicAffiliation","religion","contactNumber","pattern","message","emailAddress","facebookAccount","homeAddress","homeCountryAddress","parentsAnnualIncome","annualIncome","parentsInfo","fathersName","fathersOccupation","mothersName","mothersOccupation","churchName","churchAddress","churchPastorName","elementarySchoolName","elementaryYearGraduated","jhSchoolName","jhYearGraduated","shSchoolName","shYearGraduated","understandingOfGospel","salvationTestimony","purposeOfEnrolling","paymentMethod","Fragment","paymentService","paymentBank","certifyTrue","containerId"],"mappings":"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","file":"static/js/3.25841323.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport {\n  StyledTheology,\n  StyledFormHeader,\n  StyledTheologyContainer,\n  StyledPersonalFieldWrapper,\n  StyledEnrolleeFieldWrapper,\n  StyledEducationalFieldWrapper,\n  StyledTestimonyFieldWrapper,\n  StyledTheologyCheckboxWrapper,\n  StyledTheologyCheckboxError,\n  StyledPaymentMoneyTransfer,\n} from \"styles\";\nimport {\n  Navigation,\n  InputWrapper,\n  Input,\n  RadioWrapper,\n  Radio,\n  TextArea,\n  Form,\n  Checkbox,\n  Modal,\n} from \"components\";\n\nimport {\n  EnrolleeStatusProps,\n  PersonalProps,\n  EducationalProps,\n  TestimonyProps,\n  PaymentProps,\n  SectionContainer,\n  PaymentInfo,\n} from \"routes\";\nimport { useEmail } from \"hooks\";\nimport { transformDate } from \"utils\";\n\ntype Props = {} & RouteComponentProps;\n\ntype CollegeTypes = EnrolleeStatusProps &\n  PersonalProps &\n  EducationalProps &\n  TestimonyProps &\n  PaymentProps;\n\nconst College: React.FC<Props> = () => {\n  const sendEmail = useEmail<CollegeTypes>(\n    \"spbts_college_pre_admission_template\"\n  );\n\n  const { register, errors, watch, setValue, handleSubmit } = useForm<\n    CollegeTypes\n  >();\n\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n\n  const [showLoadingModal, setShowLoading] = useState(false);\n\n  const [disabled, setDisabled] = useState(false);\n\n  const onFormSubmit = async (data: CollegeTypes) => {\n    setDisabled(true);\n    setShowLoading(true);\n\n    console.log(data);\n\n    const birthDate = transformDate(data.birthDate);\n    const dateBaptized = transformDate(data.dateBaptized);\n\n    const newData = {\n      ...data,\n      birthDate,\n      dateBaptized,\n    };\n\n    try {\n      const response = await sendEmail(newData);\n\n      if (response) {\n        setTimeout(() => {\n          setShowLoading(false);\n          setShowSuccessModal(true);\n          setDisabled(false);\n        }, 3000);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const isNewStudent =\n    watch(\"typeOfStudent\")?.toLocaleLowerCase() === \"new student\";\n\n  const isCurrentStudent =\n    watch(\"typeOfStudent\")?.toLocaleLowerCase() === \"current student\";\n\n  const isForeignerStudent =\n    watch(\"typeOfStudent\")?.toLocaleLowerCase() === \"foreigner\";\n\n  const isMarried = watch(\"civilStatus\")?.toLocaleLowerCase() === \"married\";\n\n  const isMoneyTransfer =\n    watch(\"paymentMethod\")?.toLocaleLowerCase() === \"money transfer\";\n\n  const isBankTransaction =\n    watch(\"paymentMethod\")?.toLocaleLowerCase() === \"bank transaction\";\n\n  useEffect(() => {\n    setValue(\"desiredCourse\", \"Bachelor of Arts In Christian Education\");\n\n    if (isMoneyTransfer) {\n      setValue(\"paymentBank\", \"\");\n    } else {\n      setValue(\"paymentService\", \"\");\n    }\n  }, [isMoneyTransfer, setValue]);\n\n  return (\n    <StyledTheology>\n      <Navigation />\n\n      <Modal\n        type=\"success\"\n        visible={showSuccessModal}\n        title=\"success\"\n        heading=\"Submitted Successfully\"\n        subHeading=\"Your form has been successfully submitted.\"\n        onClose={() => setShowSuccessModal(false)}\n      />\n\n      <Modal\n        type=\"info\"\n        visible={showLoadingModal}\n        title=\"information\"\n        heading=\"Processing\"\n        subHeading=\"Please wait. Your information is being process.\"\n        onClose={() => setShowLoading(false)}\n      />\n\n      <StyledTheologyContainer>\n        <Form onSubmit={handleSubmit(onFormSubmit)} disabled={disabled}>\n          <StyledFormHeader>\n            <h1>Pre-Admission Form</h1>\n            <p>Please fill all necessary information with all honesty.</p>\n            <p>Please note, an asterisk(*) denotes a required field.</p>\n          </StyledFormHeader>\n\n          <SectionContainer heading=\"Enrollee Status\">\n            <StyledEnrolleeFieldWrapper>\n              <RadioWrapper\n                id=\"type-of-student\"\n                heading=\"What student type are you?\"\n                error={errors.typeOfStudent && \"Student Types is Required!\"}\n              >\n                <Radio\n                  label=\"New Student\"\n                  name=\"typeOfStudent\"\n                  value=\"New Student\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Current Student\"\n                  name=\"typeOfStudent\"\n                  value=\"Current Student\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Transferee\"\n                  name=\"typeOfStudent\"\n                  value=\"Transferee\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Returning Student\"\n                  name=\"typeOfStudent\"\n                  value=\"Returning Student\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Cross Enrollee\"\n                  name=\"typeOfStudent\"\n                  value=\"Cross Enrollee\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Foreigner\"\n                  name=\"typeOfStudent\"\n                  value=\"Foreigner\"\n                  ref={register({ required: true })}\n                />\n              </RadioWrapper>\n\n              <RadioWrapper\n                id=\"semester\"\n                heading=\"Semester\"\n                error={errors.semester && \"Semester is Required!\"}\n              >\n                <Radio\n                  label=\"1st\"\n                  name=\"semester\"\n                  value=\"1st\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"2nd\"\n                  name=\"semester\"\n                  value=\"2nd\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Summer\"\n                  name=\"semester\"\n                  value=\"Summer\"\n                  ref={register({ required: true })}\n                />\n              </RadioWrapper>\n\n              <InputWrapper\n                heading=\"School Year\"\n                id=\"school-year\"\n                columns=\"repeat(2, 1fr)\"\n              >\n                <Input\n                  type=\"number\"\n                  label=\"From\"\n                  placeholder=\"year\"\n                  id=\"from-year\"\n                  name=\"schoolYear.from\"\n                  ref={register({ required: true })}\n                  error={errors.schoolYear?.from && \"from year is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"To\"\n                  placeholder=\"year\"\n                  id=\"to-year\"\n                  name=\"schoolYear.to\"\n                  ref={register({ required: true })}\n                  error={errors.schoolYear?.to && \"to year is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Desired Course\"\n                id=\"desired-course\"\n                columns=\"repeat(6, 1fr)\"\n              >\n                <Input\n                  label=\"Course Name\"\n                  id=\"course-name\"\n                  name=\"desiredCourse\"\n                  ref={register({ required: true })}\n                  readOnly\n                />\n                <Input\n                  type=\"number\"\n                  id=\"year-level\"\n                  label=\"Year Level\"\n                  name=\"yearLevel\"\n                  ref={register({ required: true })}\n                  error={errors.yearLevel && \"year level is required\"}\n                />\n                <Input\n                  label=\"Name of School Last S.Y. Attended\"\n                  id=\"school-last-attended\"\n                  name=\"schoolNameLastAttended\"\n                  required={false}\n                  ref={register}\n                />\n              </InputWrapper>\n            </StyledEnrolleeFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Personal Information\">\n            <StyledPersonalFieldWrapper>\n              <InputWrapper\n                heading=\"Full Name\"\n                id=\"full-name\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"First Name\"\n                  id=\"first-name\"\n                  name=\"firstName\"\n                  ref={register({ required: true })}\n                  error={errors.firstName && \"first name is required\"}\n                />\n                <Input\n                  label=\"Last Name\"\n                  id=\"last-name\"\n                  name=\"lastName\"\n                  ref={register({ required: true })}\n                  error={errors.lastName && \"last name is required\"}\n                />\n                <Input\n                  label=\"Middle Name\"\n                  id=\"middle-name\"\n                  name=\"middleName\"\n                  ref={register({ required: true })}\n                  error={errors.middleName && \"middle name is required\"}\n                />\n                <Input\n                  label=\"Suffix\"\n                  placeholder=\"Ex. Jr / Sr\"\n                  id=\"suffix\"\n                  required={false}\n                  name=\"suffix\"\n                  ref={register}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Gender & Status\"\n                id=\"gender-status\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"gender\"\n                  placeholder=\"Male / Female\"\n                  name=\"gender\"\n                  ref={register({ required: true })}\n                  error={errors.gender && \"gender is required\"}\n                />\n                <Input\n                  label=\"civil status\"\n                  name=\"civilStatus\"\n                  ref={register({ required: true })}\n                  error={errors.civilStatus && \"gender is required\"}\n                />\n\n                {isMarried && (\n                  <Input\n                    label=\"Spouse Name\"\n                    placeholder=\"Complete Name\"\n                    id=\"spouse-name\"\n                    name=\"spouseName\"\n                    ref={register({ required: isMarried })}\n                    error={errors.spouseName && \"spouse name is required\"}\n                  />\n                )}\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Birth Information\"\n                id=\"birth-info\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"birth place\"\n                  id=\"birth-place\"\n                  name=\"birthPlace\"\n                  ref={register({ required: true })}\n                  error={errors.birthPlace && \"birth place is required\"}\n                />\n                <Input\n                  type=\"date\"\n                  label=\"birth date\"\n                  id=\"birth-date\"\n                  name=\"birthDate\"\n                  ref={register({ required: true })}\n                  error={errors.birthDate && \"birth date is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"age\"\n                  id=\"age\"\n                  name=\"age\"\n                  ref={register({ required: true })}\n                  error={errors.age && \"age is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Nationality\"\n                id=\"nationalism\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"nationality\"\n                  id=\"nationality\"\n                  name=\"nationality\"\n                  ref={register({ required: true })}\n                  error={errors.nationality && \"nationality is required\"}\n                />\n                <Input\n                  label=\"dialect\"\n                  id=\"dialect\"\n                  name=\"dialect\"\n                  ref={register({ required: true })}\n                  error={errors.dialect && \"dialect is required\"}\n                />\n                <Input\n                  label=\"ethnic affiliation\"\n                  placeholder=\"Ex. Cebuano / etc.\"\n                  id=\"ethnic\"\n                  name=\"ethnicAffiliation\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.ethnicAffiliation && \"ethnicAffiliation is required\"\n                  }\n                />\n                <Input\n                  label=\"religion\"\n                  placeholder=\"Ex. Southern Baptist / Etc..\"\n                  id=\"religion\"\n                  name=\"religion\"\n                  ref={register({ required: true })}\n                  error={errors.religion && \"religion is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Contact Information\"\n                id=\"contact-information\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  type=\"number\"\n                  label=\"contact number\"\n                  id=\"contact-number\"\n                  name=\"contactNumber\"\n                  ref={register({ required: true })}\n                  error={errors.contactNumber && \"contactNumber is required\"}\n                />\n                <Input\n                  type=\"email\"\n                  label=\"email address\"\n                  id=\"email\"\n                  name=\"emailAddress\"\n                  ref={register({\n                    required: \"Email address is required\",\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                      message: \"Invalid email address\",\n                    },\n                  })}\n                  error={\n                    errors.emailAddress && `${errors.emailAddress.message}`\n                  }\n                />\n                <Input\n                  type=\"facebook\"\n                  label=\"facebook account\"\n                  id=\"facebook-account\"\n                  name=\"facebookAccount\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.facebookAccount && \"facebook account is required\"\n                  }\n                />\n                <Input\n                  label={\n                    isForeignerStudent ? \"philippine address\" : \"home address\"\n                  }\n                  id=\"home-address\"\n                  name=\"homeAddress\"\n                  ref={register({ required: true })}\n                  error={\n                    (errors.homeAddress &&\n                      isForeignerStudent &&\n                      \"philippine Address is required\") ||\n                    (errors.homeAddress &&\n                      !isForeignerStudent &&\n                      \"home Address is required\") ||\n                    \"\"\n                  }\n                />\n\n                {isForeignerStudent && (\n                  <Input\n                    label=\"home country address\"\n                    id=\"home-country-address\"\n                    name=\"homeCountryAddress\"\n                    ref={register({ required: true })}\n                    error={\n                      errors.homeCountryAddress &&\n                      \"home Country Address is required\"\n                    }\n                  />\n                )}\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Parent's / Family Annual Income\"\n                id=\"parents-income\"\n                columns=\"repeat(2, 1fr)\"\n              >\n                <Input\n                  label=\"Annual Income\"\n                  id=\"parents-annual-income\"\n                  name=\"parentsAnnualIncome.annualIncome\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsAnnualIncome?.annualIncome &&\n                    \"annual income is required\"\n                  }\n                />\n                <Input\n                  label=\"Other Income\"\n                  placeholder=\"please specify\"\n                  id=\"parents-other-income\"\n                  name=\"parentsAnnualIncome.otherIncome\"\n                  ref={register}\n                  required={false}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Parent's Information\"\n                id=\"parent-information\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"father's name\"\n                  placeholder=\"father's complete name\"\n                  id=\"fathers-name\"\n                  name=\"parentsInfo.fathersName\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.fathersName &&\n                    \"father's name is required\"\n                  }\n                />\n                <Input\n                  label=\"occupation\"\n                  placeholder=\"occupation\"\n                  id=\"fathers-occupation\"\n                  name=\"parentsInfo.fathersOccupation\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.fathersOccupation &&\n                    \"occupation is required\"\n                  }\n                />\n                <Input\n                  label=\"mother's name\"\n                  placeholder=\"mother's complete name\"\n                  id=\"mothers-name\"\n                  name=\"parentsInfo.mothersName\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.mothersName &&\n                    \"mother's name is required\"\n                  }\n                />\n                <Input\n                  label=\"occupation\"\n                  placeholder=\"occupation\"\n                  id=\"mothers-occupation\"\n                  name=\"parentsInfo.mothersOccupation\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.parentsInfo?.mothersOccupation &&\n                    \"occupation is required\"\n                  }\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading={\n                  <>\n                    Person Supporting You <span>( Other than parents )</span>\n                  </>\n                }\n                id=\"person-supporting\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"complete name\"\n                  id=\"other-supporter-name\"\n                  name=\"otherPersonSupport.completeName\"\n                  required={false}\n                  ref={register}\n                />\n                <Input\n                  label=\"occupation\"\n                  id=\"other-supporter-occupation\"\n                  name=\"otherPersonSupport.occupation\"\n                  required={false}\n                  ref={register}\n                />\n                <Input\n                  label=\"address\"\n                  id=\"other-supporter-address\"\n                  name=\"otherPersonSupport.address\"\n                  required={false}\n                  ref={register}\n                />\n                <Input\n                  label=\"relationship\"\n                  id=\"other-supporter-relationship\"\n                  name=\"otherPersonSupport.relationship\"\n                  required={false}\n                  ref={register}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"Church Information\"\n                id=\"church-information\"\n                columns=\"repeat(6, 1fr)\"\n              >\n                <Input\n                  label=\"church name\"\n                  id=\"church-name\"\n                  name=\"churchName\"\n                  ref={register({ required: true })}\n                  error={errors.churchName && \"church name is required\"}\n                />\n                <Input\n                  type=\"date\"\n                  label=\"date baptized\"\n                  id=\"date-baptized\"\n                  name=\"dateBaptized\"\n                  ref={register({ required: true })}\n                  error={errors.dateBaptized && \"date baptized is required\"}\n                />\n                <Input\n                  label=\"church address\"\n                  id=\"church-address\"\n                  name=\"churchAddress\"\n                  ref={register({ required: true })}\n                  error={errors.churchAddress && \"church address is required\"}\n                />\n                <Input\n                  label=\"association\"\n                  id=\"association\"\n                  name=\"association\"\n                  required={false}\n                  ref={register}\n                />\n                <Input\n                  label=\"church pastor name\"\n                  placeholder=\"church pastor complete name\"\n                  id=\"church-pastor\"\n                  name=\"churchPastorName\"\n                  ref={register({ required: true })}\n                  error={errors.churchPastorName && \"pastor name is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"pastor contact number\"\n                  placeholder=\"contact number\"\n                  id=\"church-pastor-contact-number\"\n                  name=\"churchPastorContactNumber\"\n                  required={false}\n                  ref={register}\n                />\n              </InputWrapper>\n            </StyledPersonalFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Educational Background\">\n            <StyledEducationalFieldWrapper>\n              <InputWrapper\n                heading=\"elementary\"\n                id=\"elementary\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"school name\"\n                  id=\"elementary-school-name\"\n                  name=\"elementarySchoolName\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.elementarySchoolName && \"school name is required\"\n                  }\n                />\n                <Input\n                  type=\"number\"\n                  label=\"year graduated\"\n                  id=\"elementary-year-graduated\"\n                  name=\"elementaryYearGraduated\"\n                  ref={register({ required: true })}\n                  error={\n                    errors.elementaryYearGraduated &&\n                    \"year graduated is required\"\n                  }\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"junior high school\"\n                id=\"junior-high-school\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"school name\"\n                  id=\"jh-school-name\"\n                  name=\"jhSchoolName\"\n                  ref={register({ required: true })}\n                  error={errors.jhSchoolName && \"school name is required\"}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"year graduated\"\n                  id=\"jh-year-graduated\"\n                  name=\"jhYearGraduated\"\n                  ref={register({ required: true })}\n                  error={errors.jhYearGraduated && \"year graduated is required\"}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"senior high school\"\n                id=\"senior-high-school\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"school name\"\n                  id=\"sh-school-name\"\n                  name=\"shSchoolName\"\n                  ref={register({ required: isNewStudent })}\n                  error={errors.shSchoolName && \"school name is required\"}\n                  required={isNewStudent}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"year graduated\"\n                  id=\"sh-year-graduated\"\n                  name=\"shYearGraduated\"\n                  ref={register({ required: isNewStudent })}\n                  error={errors.shYearGraduated && \"year graduated is required\"}\n                  required={isNewStudent}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"college last attended\"\n                id=\"college-attended\"\n                columns=\"repeat(3, 1fr)\"\n              >\n                <Input\n                  label=\"school name\"\n                  id=\"college-school-name\"\n                  name=\"collegeSchoolName\"\n                  required={false}\n                  ref={register}\n                />\n                <Input\n                  label=\"course taken\"\n                  id=\"college-course-taken\"\n                  name=\"collegeCourseTaken\"\n                  required={false}\n                  ref={register}\n                />\n                <Input\n                  type=\"number\"\n                  label=\"year graduated\"\n                  id=\"college-year-graduated\"\n                  name=\"collegeYearGraduated\"\n                  required={false}\n                  ref={register}\n                />\n              </InputWrapper>\n\n              <InputWrapper\n                heading=\"special skills & abilities\"\n                id=\"special-skills\"\n              >\n                <Input\n                  label=\"skills / abilities\"\n                  placeholder=\"please specify\"\n                  id=\"special-skills\"\n                  name=\"specialSkills\"\n                  ref={register}\n                  required={false}\n                />\n              </InputWrapper>\n            </StyledEducationalFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Spiritual Autobiography\">\n            <StyledTestimonyFieldWrapper>\n              <TextArea\n                label=\"understanding of the gospel\"\n                placeholder=\"my understanding of the gospel\"\n                id=\"understanding-of-gospel\"\n                name=\"understandingOfGospel\"\n                ref={register({ required: true })}\n                error={\n                  errors.understandingOfGospel &&\n                  \"understanding of the gospel fill is required\"\n                }\n              />\n              <TextArea\n                label=\"Salvation Testimony\"\n                placeholder=\"my conversion and spiritual growth\"\n                id=\"salvation-testimony\"\n                name=\"salvationTestimony\"\n                ref={register({ required: true })}\n                error={\n                  errors.salvationTestimony && \"salvation testimony is required\"\n                }\n              />\n              <TextArea\n                label=\"Calling & Purpose for Enrolling in SPBTS\"\n                placeholder=\"my call to ministry and reason for enrolling in SPBTS\"\n                id=\"purpose-of-enrolling\"\n                name=\"purposeOfEnrolling\"\n                ref={register({ required: true })}\n                error={\n                  errors.purposeOfEnrolling &&\n                  \"purpose of enrolling is required\"\n                }\n              />\n            </StyledTestimonyFieldWrapper>\n          </SectionContainer>\n\n          <SectionContainer heading=\"Payment Information\">\n            <PaymentInfo isCurrentStudent={isCurrentStudent} />\n\n            {isCurrentStudent && (\n              <RadioWrapper\n                heading=\"select payment method\"\n                id=\"payment-method\"\n                error={\n                  errors.paymentMethod &&\n                  \"payment method is required! you need to select one.\"\n                }\n              >\n                <Radio\n                  label=\"Money transfer\"\n                  value=\"Money Transfer\"\n                  name=\"paymentMethod\"\n                  ref={register({ required: true })}\n                />\n                <Radio\n                  label=\"Bank Transaction\"\n                  value=\"Bank Transaction\"\n                  name=\"paymentMethod\"\n                  ref={register({ required: true })}\n                />\n              </RadioWrapper>\n            )}\n\n            {isMoneyTransfer && (\n              <React.Fragment>\n                <StyledPaymentMoneyTransfer>\n                  <p>\n                    Send your payment to the SPBTS Finance Officer:\n                    <span>MARIA CIENA B. TENECIO</span>\n                    <span>09190083163</span>\n                    <span>Davao City</span>\n                  </p>\n                </StyledPaymentMoneyTransfer>\n\n                <RadioWrapper\n                  heading=\"select service\"\n                  error={\n                    errors.paymentService && \"payment service is required!\"\n                  }\n                >\n                  <Radio\n                    label=\"Palawan Pawnshop\"\n                    name=\"paymentService\"\n                    value=\"Palawan Pawnshop\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"RD Pawnshop\"\n                    name=\"paymentService\"\n                    value=\"RD Pawnshop\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"M Lhuillier\"\n                    name=\"paymentService\"\n                    value=\"M Lhuillier\"\n                    ref={register({ required: true })}\n                  />\n                </RadioWrapper>\n              </React.Fragment>\n            )}\n\n            {isBankTransaction && (\n              <React.Fragment>\n                <StyledPaymentMoneyTransfer>\n                  <p>\n                    You may send your payment to any of the following SPBTS Bank\n                    Accounts:\n                    <span>SPBTS</span>\n                    <span>BPI</span>\n                    <span>9431 0059 61</span>\n                  </p>\n\n                  <p>\n                    <br />\n                    <span>SPBTS</span>\n                    <span>LAND BANK OF THE PHILIPPINES</span>\n                    <span>2981 0856 23</span>\n                  </p>\n\n                  <p>\n                    <br />\n                    <span>SPBTS</span>\n                    <span>METROBANK</span>\n                    <span>547 3 547053606</span>\n                  </p>\n                </StyledPaymentMoneyTransfer>\n\n                <RadioWrapper\n                  heading=\"select bank\"\n                  error={errors.paymentBank && \"payment bank is required!\"}\n                >\n                  <Radio\n                    label=\"BPI\"\n                    name=\"paymentBank\"\n                    value=\"BPI\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"LAND BANK OF THE PHILIPPINES\"\n                    name=\"paymentBank\"\n                    value=\"LAND BANK OF THE PHILIPPINES\"\n                    ref={register({ required: true })}\n                  />\n                  <Radio\n                    label=\"METROBANK\"\n                    name=\"paymentBank\"\n                    value=\"METROBANK\"\n                    ref={register({ required: true })}\n                  />\n                </RadioWrapper>\n              </React.Fragment>\n            )}\n\n            {isCurrentStudent && (\n              <StyledPaymentMoneyTransfer>\n                <p>\n                  As proof of payment, please send a photo of the receipt to our\n                  Finance Officer to any of the following:\n                  <span>FB Messenger: Ciena Tenecio</span>\n                  <span>E-mail: ciena_tenecio@yahoo.com</span>\n                </p>\n              </StyledPaymentMoneyTransfer>\n            )}\n          </SectionContainer>\n\n          <StyledTheologyCheckboxWrapper\n            error={errors.certifyTrue ? true : false}\n          >\n            <Checkbox\n              label=\"I certify that all information stated and written above are true and correct. With my consent, I agree that the information and data provided will be used only for whatever legal purposes, do hereby promulgated. [ Section 16 R.A. 10173, known as Data Privacy Act of 2012 ].\"\n              id=\"certify\"\n              containerId=\"certify-checkbox\"\n              name=\"certifyTrue\"\n              ref={register({ required: true })}\n            />\n            {errors.certifyTrue && (\n              <StyledTheologyCheckboxError>\n                This field is required!\n              </StyledTheologyCheckboxError>\n            )}\n          </StyledTheologyCheckboxWrapper>\n        </Form>\n      </StyledTheologyContainer>\n    </StyledTheology>\n  );\n};\n\nexport default College;\n"],"sourceRoot":""}